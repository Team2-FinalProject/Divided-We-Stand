[{"/home/rivari/Documents/hacktiv8/dividedwestand/src/index.js":"1","/home/rivari/Documents/hacktiv8/dividedwestand/src/App.js":"2","/home/rivari/Documents/hacktiv8/dividedwestand/src/reportWebVitals.js":"3","/home/rivari/Documents/hacktiv8/dividedwestand/src/pages/Home.jsx":"4","/home/rivari/Documents/hacktiv8/dividedwestand/src/pages/Room.jsx":"5","/home/rivari/Documents/hacktiv8/dividedwestand/src/store/index.js":"6","/home/rivari/Documents/hacktiv8/dividedwestand/src/pages/Game.jsx":"7","/home/rivari/Documents/hacktiv8/dividedwestand/src/connection/socket.js":"8","/home/rivari/Documents/hacktiv8/dividedwestand/src/components/CardRoom.jsx":"9","/home/rivari/Documents/hacktiv8/dividedwestand/src/components/Board.js":"10","/home/rivari/Documents/hacktiv8/dividedwestand/src/js/game.js":"11","/home/rivari/Documents/hacktiv8/dividedwestand/src/pages/Lobby.jsx":"12"},{"size":565,"mtime":1607942185230,"results":"13","hashOfConfig":"14"},{"size":728,"mtime":1607951288710,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607673038386,"results":"16","hashOfConfig":"14"},{"size":1736,"mtime":1607942185230,"results":"17","hashOfConfig":"14"},{"size":2429,"mtime":1607974972215,"results":"18","hashOfConfig":"14"},{"size":717,"mtime":1607942185230,"results":"19","hashOfConfig":"14"},{"size":314,"mtime":1607942185230,"results":"20","hashOfConfig":"14"},{"size":128,"mtime":1607942185230,"results":"21","hashOfConfig":"14"},{"size":2675,"mtime":1607954576144,"results":"22","hashOfConfig":"14"},{"size":312,"mtime":1607942185230,"results":"23","hashOfConfig":"14"},{"size":5281,"mtime":1607942185230,"results":"24","hashOfConfig":"14"},{"size":4989,"mtime":1607955791965,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"uand94",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/home/rivari/Documents/hacktiv8/dividedwestand/src/index.js",[],["55","56"],"/home/rivari/Documents/hacktiv8/dividedwestand/src/App.js",[],"/home/rivari/Documents/hacktiv8/dividedwestand/src/reportWebVitals.js",[],"/home/rivari/Documents/hacktiv8/dividedwestand/src/pages/Home.jsx",["57","58"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport socket from \"../connection/socket\";\nimport { useDispatch } from 'react-redux'\nimport { v4 as uuidv4 } from \"uuid\";\n// import { SET_PLAYERS } from '../store/actions/socket'\n\nexport default function Home() {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const dispatch = useDispatch()\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    let id = uuidv4()\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"id\", id);\n    history.push(\"/lobby\")\n    const data = {\n      username, id\n    }\n    // socket.emit(\"login\", username);\n    dispatch({type:'server/players', data});\n    // dispatch(SET_PLAYERS)\n};\n\n  const handleUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleLogin}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"input your name\"\n            onChange={handleUsername}\n          />\n          <Button type=\"submit\">Submit</Button>\n        </div>\n      </form>\n    </Container>\n  );\n}\n","/home/rivari/Documents/hacktiv8/dividedwestand/src/pages/Room.jsx",["59","60"],"/home/rivari/Documents/hacktiv8/dividedwestand/src/store/index.js",[],"/home/rivari/Documents/hacktiv8/dividedwestand/src/pages/Game.jsx",[],["61","62"],"/home/rivari/Documents/hacktiv8/dividedwestand/src/connection/socket.js",[],"/home/rivari/Documents/hacktiv8/dividedwestand/src/components/CardRoom.jsx",["63","64","65","66"],"import React, { useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport socket from \"../connection/socket\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function CardRoom(props) {\n  const { id, name, teamOne, teamTwo, status } = props.data;\n  const history = useHistory();\n\n  const handleJoinRoom = (id, name) => {\n    let payload = {\n      roomName: name,\n      idRoom: id,\n      username: localStorage.getItem(\"username\"),\n    };\n    socket.emit(\"joinRoom\", payload);\n    history.push(`/room/${name}`);\n  };\n\n  const handleJoinTeam = (tim) => {\n    let payload = {\n      roomName: name,\n      idRoom: id,\n      username: localStorage.getItem(\"username\"),\n      team: tim === 'team1' ? \"teamOne\" : \"teamTwo\"\n    };\n    socket.emit(\"joinRoom\", payload);\n    history.push(`/room/${name}`);\n  }\n\n  return (\n    <div className=\"nes-container with-title is-centered\">\n      <p className=\"title\">{name}</p>\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"team-1\">\n          <span className=\"text-light\">Team 1</span>\n          {/* {teamOne.map((e) => (\n            <div className=\"card player\">\n              <div className=\"card-body\">{e}</div>\n            </div>\n          ))} */}\n          <div className=\"card player\">\n            <div className=\"card-body\">{teamOne[0]}</div>\n          </div>\n          <div className=\"card player\">\n            <div className=\"card-body\">{teamOne[1]}</div>\n          </div>\n          <div className=\"card player\">\n            <div className=\"card-body\">{teamOne[2]}</div>\n          </div>\n          <Button type=\"submit\" className=\"nes-btn is-success mt-3 mr-3\" onClick={() => handleJoinTeam('team1')}>\n            Join\n          </Button>\n        </div>\n        <div className=\"align-self-center\">\n          <span className=\"text-light\">VS</span>\n        </div>\n        \n        <div className=\"team-2\">\n          <span className=\"text-light\">Team 2</span>\n          {/* {teamTwo?.map((e) => (\n            <div className=\"card player\">\n              <div className=\"card-body\">{e}</div>\n            </div>\n          ))} */}\n          <div className=\"card player\">\n            <div className=\"card-body\">{teamTwo[0]}</div>\n          </div>\n          <div className=\"card player\">\n            <div className=\"card-body\">{teamTwo[1]}</div>\n          </div>\n          <div className=\"card player\">\n            <div className=\"card-body\">{teamTwo[2]}</div>\n          </div>\n          <Button type=\"submit\" className=\"nes-btn is-success mt-3 mr-3\" onClick={() => handleJoinTeam('team2')}>\n            Join\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/rivari/Documents/hacktiv8/dividedwestand/src/components/Board.js",[],"/home/rivari/Documents/hacktiv8/dividedwestand/src/js/game.js",[],"/home/rivari/Documents/hacktiv8/dividedwestand/src/pages/Lobby.jsx",["67","68","69"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport CardRoom from \"../components/CardRoom\";\nimport socket from \"../connection/socket\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function Lobby() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const nameRoom = useRef();\n  const formRoom = useRef();\n  // const history = useHistory();\n  const [room, setRoom] = useState([]);\n\n  const handleSubmitRoom = (e) => {\n    e.preventDefault();\n    let roomName = nameRoom.current.value;\n    let payload = {\n      roomName,\n      id: uuidv4(),\n      roomMaster: {\n        id: localStorage.getItem(\"id\"),\n        username: localStorage.getItem(\"username\"),\n      },\n    };\n    // dispatch({type: 'server/createRoom', data: roomName})\n    socket.emit(\"createRoom\", payload);\n    formRoom.current.reset();\n  };\n\n  //belum kepake\n  useEffect(() => {\n    dispatch({ type: \"server/online\" });\n    dispatch({ type: \"server/rooms\" });\n    console.log(state.rooms.length, \",,, useeffect mounted\");\n    if (state.rooms.length > 0) {\n      setRoom(state.rooms);\n    }\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"createRoom\", (rooms) => {\n      setRoom(rooms);\n    });\n    socket.on(\"joinRoom\", (rooms) => {\n      setRoom(rooms);\n    });\n  }, [room]);\n  return (\n    <section className=\"fight-screen\">\n      <div className=\"row lobby\">\n        <Form onSubmit={handleSubmitRoom} ref={formRoom} style={{ width: 2000}}>\n          <textarea\n            className=\"nes-textarea\"\n            placeholder=\"Create Room\"\n            ref={nameRoom}\n            required\n          ></textarea>\n          <Button type=\"submit\" className=\"nes-btn is-success\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n\n      <div className=\"row\">\n\n        {room.map(item => (\n          <CardRoom data={item} key={item.id} />\n        ))}\n        {/* <div className=\"nes-container with-title is-centered\">\n          <p className=\"title\">Room 1</p>\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"team-1\">\n              <span className=\"text-light\">Team 1</span>\n              <div className=\"card player\">\n                <div className=\"card-body\">Player 1</div>\n              </div>\n              <div className=\"card player\">\n                <div className=\"card-body\">Player 2</div>\n              </div>\n              <div className=\"card player\">\n                <div className=\"card-body\"></div>\n              </div>\n            </div>\n            <div className=\"align-self-center\">\n              <span className=\"text-light\">VS</span>\n            </div>\n            <div className=\"team-2\">\n              <span className=\"text-light\">Team 2</span>\n              <div className=\"card player\">\n                <div className=\"card-body\">Player 4</div>\n              </div>\n              <div className=\"card player\">\n                <div className=\"card-body\">Player 5</div>\n              </div>\n              <div className=\"card player\">\n                <div className=\"card-body\">Player 6</div>\n              </div>\n            </div>\n          </div>\n        </div> */}\n        \n      </div>\n    </section>\n  );\n}\n\n// export default function Lobby() {\n// const dispatch = useDispatch();\n// const state = useSelector((state) => state);\n// const nameRoom = useRef();\n// const formRoom = useRef();\n// // const history = useHistory();\n// const [room, setRoom] = useState([]);\n\n// const handleSubmitRoom = (e) => {\n//   e.preventDefault();\n//   let roomName = nameRoom.current.value;\n//   let payload = {\n//     roomName,\n//     id: uuidv4(),\n//     roomMaster: {\n//       id: localStorage.getItem('id'),\n//       username: localStorage.getItem('username'),\n//     }\n//   };\n//   // dispatch({type: 'server/createRoom', data: roomName})\n//   socket.emit(\"createRoom\", payload)\n//   formRoom.current.reset()\n// };\n\n// //belum kepake\n// useEffect(() => {\n//   dispatch({ type: \"server/online\" });\n//   dispatch({ type: \"server/rooms\" });\n//   console.log(state.rooms.length, \",,, useeffect mounted\");\n//   if (state.rooms.length > 0) {\n//     setRoom(state.rooms);\n//   }\n// }, []);\n\n// useEffect(() => {\n//   socket.on(\"createRoom\", (rooms) => {\n//     setRoom(rooms);\n//   });\n//   socket.on(\"joinRoom\", (rooms) => {\n//     setRoom(rooms);\n//   });\n// }, [room]);\n\n//   return (\n//     <Container>\n// {JSON.stringify(state)}\n//       <Form onSubmit={handleSubmitRoom} ref={formRoom}>\n//         <Form.Group>\n//           <Form.Label>Create Room</Form.Label>\n//           <Form.Control type=\"text\" ref={nameRoom}></Form.Control>\n//         </Form.Group>\n//         <Button type=\"submit\">Submit</Button>\n//       </Form>\n//       {room.map((item) => (\n//         <CardRoom data={item} key={item.id} />\n//       ))}\n//     </Container>\n//   );\n// }\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"78","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":14},{"ruleId":"74","severity":1,"message":"79","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":25,"column":6,"nodeType":"82","endLine":25,"endColumn":18,"suggestions":"83"},{"ruleId":"70","replacedBy":"84"},{"ruleId":"72","replacedBy":"85"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"86","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"87","line":7,"column":39,"nodeType":"76","messageId":"77","endLine":7,"endColumn":45},{"ruleId":"74","severity":1,"message":"88","line":10,"column":9,"nodeType":"76","messageId":"77","endLine":10,"endColumn":23},{"ruleId":"74","severity":1,"message":"79","line":2,"column":18,"nodeType":"76","messageId":"77","endLine":2,"endColumn":27},{"ruleId":"74","severity":1,"message":"89","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":20},{"ruleId":"80","severity":1,"message":"90","line":41,"column":6,"nodeType":"82","endLine":41,"endColumn":8,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'socket' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'roomName'. Either include them or remove the dependency array.","ArrayExpression",["94"],["92"],["93"],"'Card' is defined but never used.","'status' is assigned a value but never used.","'handleJoinRoom' is assigned a value but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state.rooms'. Either include them or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [history, roomDetail, roomName]",{"range":"100","text":"101"},"Update the dependencies array to be: [dispatch, state.rooms]",{"range":"102","text":"103"},[746,758],"[history, roomDetail, roomName]",[1276,1278],"[dispatch, state.rooms]"]